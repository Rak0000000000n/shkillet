using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class move_script : MonoBehaviour
{
    // Ссылка на камеру, которая будет использоваться для определения направления движения.
    public Transform cam;

    // Скорости движения и вращения при ходьбе
    public float walkSpeed;
    public float walkRotationSpeed;

    // Скорости движения и вращения при беге
    public float runSpeed;
    public float runRotationSpeed;

    // Ссылка на аниматор персонажа.
    private Animator anim;
    // Вектор движения персонажа.
    private Vector3 movement;

    private void Start()
    {
        anim = GetComponent<Animator>();
    }

    void Update()
    {
        // Получаем направление движения от камеры.
        Vector3 forward = cam.forward;
        Vector3 right = cam.right;

        // Очищаем вертикальную составляющую направления, 
        // чтобы персонаж не двигался вверх или вниз.
        forward.y = 0;
        right.y = 0;

        // Нормализуем векторы направления, чтобы они имели длину 1.
        forward.Normalize();
        right.Normalize();

        // Вычисляем вектор движения на основе ввода пользователя.
        // Input.GetAxis("Vertical") и Input.GetAxis("Horizontal") возвращают значения от -1 до 1, которые 
        //  определяют направление движения по вертикали и горизонтали.
        movement = (forward * Input.GetAxis("Vertical") + right * Input.GetAxis("Horizontal")).normalized;

        // Определяем, бежит ли персонаж.
        bool isRunning = Input.GetKey(KeyCode.LeftShift);

        // Движение и вращение персонажа.
        if (movement != Vector3.zero)
        {
            // Выбираем скорость и скорость вращения в зависимости от того, 
            // бежит ли персонаж.
            float currentSpeed = isRunning ? runSpeed : walkSpeed;
            float currentRotationSpeed = isRunning ? runRotationSpeed : walkRotationSpeed;

            // Поворачиваем персонажа в направлении движения.
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(movement), Time.deltaTime * currentRotationSpeed);

            // Перемещаем персонажа в направлении движения.
            transform.position = Vector3.MoveTowards(transform.position, transform.position + movement, currentSpeed * Time.deltaTime);

            // Анимируем персонажа.
            anim.SetBool("isWalking", true);
            anim.SetBool("isRunning", isRunning);
        }
        else
        {
            // Если персонаж не двигается, то устанавливаем анимацию в состояние покоя.
            anim.SetBool("isWalking", false);
            anim.SetBool("isRunning", false);
        }
    }
}
