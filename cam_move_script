using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class cam_script : MonoBehaviour
{
    // Ссылка на объект игрока, за которым будет следовать камера.
    public GameObject player;
    // Чувствительность вращения камеры. 
    // Большее значение означает более быстрое вращение.
    public float sensitivity = 50f;

    // Переменная для хранения изменения позиции мыши с предыдущего кадра.
    private Vector2 mouseDelta;
    // Вектор смещения камеры относительно игрока.
    private Vector3 offcet;

    void Start()
    {
        offcet = transform.position - player.transform.position;
    }

    void LateUpdate()
    {
        // Получаем изменения позиции мыши с момента последнего кадра.
        mouseDelta = new Vector2(Input.GetAxis("Mouse X"), Input.GetAxis("Mouse Y"));

        // Вращаем объект вокруг своей вертикальной оси (вправо-влево).
        transform.Rotate(Vector3.up, mouseDelta.x * sensitivity * Time.deltaTime);
        // Вращаем объект вокруг своей горизонтальной оси (вверх-вниз).
        transform.Rotate(Vector3.right, -mouseDelta.y * sensitivity * Time.deltaTime);

        // Ограничиваем вращение по вертикали, чтобы камера не могла вращаться 
        if (transform.eulerAngles.x >= 0 && transform.eulerAngles.x <= 60)
        {
            transform.eulerAngles = new Vector3(Mathf.Clamp(transform.eulerAngles.x, 0f, 60f), transform.eulerAngles.y, 0);
        }
        else if (transform.eulerAngles.x >= 300 && transform.eulerAngles.x <= 360)
        {
            transform.eulerAngles = new Vector3(Mathf.Clamp(transform.eulerAngles.x, 300f, 360f), transform.eulerAngles.y, 0);
        }
        else
        {
            if (transform.eulerAngles.x - 60 < 100)
            {
                transform.eulerAngles = new Vector3(60f, transform.eulerAngles.y, 0);
            }
            else
            {
                transform.eulerAngles = new Vector3(300, transform.eulerAngles.y, 0);
            }
        }
        // Перемещаем камеру в положение, которое находится на расстоянии offcet от игрока.
        transform.position = player.transform.position + offcet;
    }
}
